"use strict";define([cardGame.gamePath+"js/models/GameState.js",cardGame.gamePath+"js/models/PlayerInGame.js",cardGame.gamePath+"js/models/Settings.js",cardGame.gamePath+"js/models/CardDB.js",cardGame.gamePath+"js/models/Rules.js",cardGame.gamePath+"js/models/AI.js"],function(e,a,t,g,r,s){return class{initGame(g){this.gameState=new e(g,3,3);let r=[new a(t.getPlayer1Name()),new a(t.getPlayer2Name())];return logger.info(t.getPlayer1Name()+" and "+t.getPlayer2Name()+" are playing"),this.gameState.setPlayers(r),this.drawCards()}drawCards(){for(let e=0,a=this.gameState.getPlayers().length;e<a;e++){let a=g.getRandomCards(5);logger.info(this.gameState.getPlayer(e).getName()+" drawn "+a.map(e=>e.getName()).join(", ")),this.gameState.getPlayer(e).setDeck(a)}return this.drawFirstPlayerPlaying(),this.gameState}drawFirstPlayerPlaying(){let e=Math.floor(Math.random()*this.gameState.getPlayers().length);this.gameState.setPlayerPlaying(this.gameState.getPlayers()[e]),logger.info(this.gameState.getPlayerPlaying().getName()+" starts")}playCard(e,...a){let t=this.gameState.getPlayerPlaying().removeCard(e);return logger.debug("[card: "+e.getName()+"; index:  "+t+"]  removed from [player: "+this.gameState.getPlayerPlaying().getName()+"]'s deck"),this.gameState.getBoard().playCardOnBoard(e,this.gameState.getPlayerPlaying(),...a),logger.info(this.gameState.getPlayerPlaying().getName()+" plays "+e.getName()+" on "+a),(new r).apply(this.gameState.getBoard(),...a),[this.gameState,t,...a]}playerPlaysCard(e,...a){return this.playCard(e,...a)}AIPlaysCard(){let e=(new s).chooseCardAndCase(this.gameState,t.getDifficulty());return this.playCard(e.card,...e.coordinates)}endTurn(){logger.info(this.gameState.getPlayerPlaying().getName()+" ended his turn");for(let e=0;e<this.gameState.getBoard().getRows();e++)for(let a=0;a<this.gameState.getBoard().getCols();a++)void 0!==this.gameState.getBoard().getCardOnBoard(e,a)&&this.gameState.getBoard().getCardOnBoard(e,a).unflip();if(this.gameState.isGameOver())return logger.info("The game is over. Winner(s) : "+this.gameState.getWinner().map(e=>e.getName()).join(",")),this.gameState;{let e;return e=this.gameState.getIndexPlayerPlaying()<this.gameState.getPlayers().length-1?this.gameState.getPlayer(this.gameState.getIndexPlayerPlaying()+1):this.gameState.getPlayer(0),this.gameState.setPlayerPlaying(e),logger.info(e.getName()+"'s turn"),this.gameState}}}});