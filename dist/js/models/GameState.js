define([cardGame.gamePath+"js/models/Board.js",cardGame.gamePath+"js/models/PlayerInGame.js"],function(e,r){return class{constructor(r,t,a){this.onePlayer=!0===r,this.board=new e(t,a)}setPlayers(e){for(let t=0;t<e.length;t++){if("object"!=typeof e[t]||!(e[t]instanceof r))throw new TypeError("Expected PlayerInGame type");e[t].getBoard()!==this.board&&e[t].setBoard(this.board)}this.players=e}isOnePlayerGame(){return this.onePlayer}getPlayers(){return this.players}getPlayer(e){if(void 0!==this.players[e])return this.players[e];logger.warning("There is no player at the index "+e)}setPlayerPlaying(e){if("object"!=typeof e||!(e instanceof r))throw new TypeError("Expected PlayerInGame type");this.playerPlaying=e}getPlayerPlaying(){return this.playerPlaying}getIndexPlayerPlaying(){for(let e=0;e<this.players.length;e++)if(this.playerPlaying===this.players[e])return e}getBoard(){return this.board}isGameOver(){return this.board.isComplete()}getWinner(){if(!this.isGameOver())return;let e=0,r=[];for(let t=0;t<this.players.length;t++)this.players[t].getScore()>e?(r=[],e=this.players[t].getScore(),r.push(this.players[t])):this.players[t].getScore()===e&&r.push(this.players[t]);return r}}});