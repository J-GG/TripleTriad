"use strict";define([],function(){return{start(e){window.cardGame={},window.cardGame.nodePath="./",window.cardGame.gamePath="./",void 0!==e&&(void 0!==e.nodePath&&(window.cardGame.nodePath=e.nodePath),void 0!==e.gamePath&&(window.cardGame.gamePath=e.gamePath)),require([cardGame.nodePath+"node_modules/jquery/dist/jquery.min",cardGame.nodePath+"node_modules/handlebars/dist/handlebars.min",cardGame.nodePath+"node_modules/js-logging/js-logging.browser"],function(a,n,t){if(window.cardGame.$container=$("#card-game"),void 0!==e&&void 0!==e.container){let a=$("#"+e.container);if(!(a.length>0))throw"Container [options.container: "+cardGame.$container+"] can't be found";cardGame.$container=a}window.logger=t.colorConsole(),logger.setLevel("debug"),window.Handlebars=n,Handlebars.registerHelper("ifEquals",function(e,a,n){return e===a?n.fn(this):n.inverse(this)}),$.get(cardGame.gamePath+"js/views/base/loader.html",function(e){let a=Handlebars.compile(e),n={gamePath:cardGame.gamePath};cardGame.$container.html(a(n))}),logger.debug("Game launching in [container: "+cardGame.$container[0].id+"]"),require([cardGame.gamePath+"js/views/base/Base.js",cardGame.gamePath+"js/toolbox/Routes.js",cardGame.gamePath+"js/models/Settings.js"],function(e,a,n){require([cardGame.gamePath+"js/lang/i18n_"+n.getLanguage()+".js"],function(n){window.cardGame.i18n=n,window.Routes=a,$.get(cardGame.gamePath+"js/views/base/base.html",function(n){let t=Handlebars.compile(n),o={i18n:cardGame.i18n,gamePath:cardGame.gamePath};cardGame.$container.html(t(o)),e.initViews(),a.get(a.getKeys().SPLASH_SCREEN)()})})})})}}});