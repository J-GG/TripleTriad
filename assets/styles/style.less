body {
	margin: 0;	
	overflow: hidden;
	background: black;
}

/* Board */
.board {
	width: 100vw;
	height: 100vh;
	box-sizing: border-box;
	background-size: cover;
}

	.board__game-area {
		content: '';
		position: relative;
		transform: translate(-50%, -50%);
		top: 50%;
		left: 50%;
		background-image: url(../img/background.png);
		background-position: center;
		background-size: cover;
		width: 166vmin;
	   	height: 100vmin;
	}

	@media(max-width: 165vh) {
		.board__game-area {
			width: 100vmin;
		   	height: 60vmin;
		}
	}
		.board__game-area--final-screen {
			background-image: url(../img/final_screen.png);
		}

	.board__game-over {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		font-family: serif;
		font-size: 13vmin;
		text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;
		color: white;
		z-index: 10;
	}

	.board__player-name-box {
		z-index: 5;
		position: absolute;
		width: 20%;
		height: 6%;
		top: 3%;
		background: #2F0F01;
		box-shadow: 0 -2px 0 #532b14 inset, 0px 2px 0px #60371f inset;
	}

	.board__player-name-box::after {
	    content: '';
	    position: absolute;
	    background: #2f0f01;
	    width: 20%;
	    height: 100%;
	    box-shadow: 0 -2px 0 #532b14 inset, 0px 2px 0px #60371f inset;
	}

	.board__player-name-box--player-1 {
		left: 0;
		text-align: left;
		animation: namePlayer1 .55s;
	}

	.board__player-name-box--player-1::after {
	    right: -15%;
	    transform: skewX(-20deg);
	}

	.board__player-name-box--player-2 {
		right: 0;
		text-align: right;
		animation: namePlayer2 .55s;
	}

	.board__player-name-box--player-2::after {
	   	left: -15%;
	    transform: skewX(20deg);
	}

	@keyframes namePlayer1 {
		from { left: -20vw; opacity: 0; }
		to { left: 0; opacity: 1; }
	}

	@keyframes namePlayer2 {
		from { right: -20vw; opacity: 0; }
		to { right: 0; opacity: 1; }
	}

	.board__player-name-text {
		padding-left: 5%;
		padding-right: 5%;
		padding-top: 3%;
		display: inline-block;
		color: white;
		font-family: sans-serif;
		font-size: 3.5vmin;
	}
	
	@media(max-width: 165vh) {
		.board__player-name-text {
			font-size: 2vmin;
		}
	}

/* Player selector */
.player-selector {
	position: absolute;
	background: url('../img/player-selector.png') center no-repeat;
	background-size: contain;
	width: 8%;
	height: 8%;
    transform: translateZ(0);
    z-index: 10;
}

.player-selector--draw {
	top: 45%;
	left: 45%;
}

	.player-selector--draw-player-1 {
		animation: selectorPlayer1 1.5s ease-out forwards;
	}

	.player-selector--draw-player-2 {
		animation: selectorPlayer2 1.5s ease-out forwards;
	}

	@keyframes selectorPlayer1 {
		from { transform: rotateY(0) rotateZ(90deg); }
		to { transform: rotateY(3060deg) rotateZ(90deg); }
	}

	@keyframes selectorPlayer2 {
		from { transform: rotateY(0) rotateZ(90deg); }
		to { transform: rotateY(2880deg) rotateZ(90deg); }
	}

.player-selector--turn {
	top: 6%;
	left: auto;
	right: auto;
	transform: rotateZ(180deg);
	animation: selectorPlayerTurn .5s linear infinite;
}

	.player-selector--turn-player-1 {
		left: 7%;
	}

	.player-selector--turn-player-2 {
		right: 7%;
	}

	@keyframes selectorPlayerTurn {
		from { top: 6%; }
		50% { top: 7%; }
		to { top: 6%; }
	}

/* Score */
.score {
	position: absolute;
	top: 80%;
	font-family: serif;
	font-size: 13vmin;
	font-style: italic;
	color: white;
}

@media(max-width: 165vh) {
	.score {
		font-size: 9vmin;
	}
}
	
	.score--player-1 {
		left: 9%;
		text-shadow: -2px 0 #3553bf, 0 2px #3553bf, 2px 0 #3553bf, 0 -2px #3553bf;
	}

	.score--player-2 {
		right: 9%;
		text-shadow: -2px 0 #b61303, 0 2px #b61303, 2px 0 #b61303, 0 -2px #b61303;
	}

/* Cursor */
.cursor {
	position: absolute;
	width: 6.5vmin;
	height: 4vmin;
	background: url('../img/cursor.png') no-repeat;
	background-size: cover;
}

@media(max-width: 165vh) {
	.cursor {
		width: 4vmin;
		height: 2.5vmin;
	}
}

	/* When selecting the card, cursor next to the left or the right deck */
	.cursor--player-1 {
		left: 18%;
		transform: scaleX(-1);
	}

	.cursor--player-2 {
		right: 18%;
	}

	.cursor--hide {
		display: none;
	}

	/* When selecting the card, cursor facing one card (0...4) */
	.LOOP-cursor--card(@n, @i: 0,  @j: (@n - @i - 1)) when (@i < @n) {
		.cursor--card-@{j} {
			top: (25% + @i * 13%);
		}

		.LOOP-cursor--card(@n, (@i + 1));
	}
	.LOOP-cursor--card(5);

	/* When selecting the case, position of the cursor (0...2) */
	.LOOP-cursor--rowcol(@n, @i: 0) when (@i < @n) {
		.cursor--row-@{i} {
			top: (22% + @i * 27%);
		}

		.cursor--col-@{i} {
			left: (27% + @i * 17%);
		}

		.LOOP-cursor--rowcol(@n, (@i + 1));
	}
	.LOOP-cursor--rowcol(3);

	.cursor--choices {
		left: 0;
	}

	.cursor--choice-1 {
		top: 0.5vmin;
	}

	.cursor--choice-2 {
		top: 4vmin;
	}


/* Card */
.card {
	width: 12%;
    height: 26%;
    position: absolute;
    background-size: cover;
    background-repeat: no-repeat;
    transform: translateZ(0);
    backface-visibility: hidden;
}
	/* For cards in decks, if they are on the right one or the left one */
	.card--player-1 {
		left: 5%;
		top: 100vh;
	}

	.card--player-2 {
		right: 5%;
		top: 100vh;
	}

	/* Cards in the decks (0...4) */
	.LOOP-cardAppearance(@n, @i: 0, @j: (@n - @i - 1)) when (@i < @n) {
		/* Animation when the cards are drawn */
		.card--player-1-appearance-deck-@{j} {
			animation: "cardAppearance@{j}" .25s (.05s + .05 * @i) forwards; 
		}

		.card--player-2-appearance-deck-@{j} {
			animation: "cardAppearance@{j}" .25s (.3s + .05 * @i) forwards; 
		}

		@keyframes "cardAppearance@{j}"{
			from { top: 100vh; }
			to { top: (12% + @i * 13%); }
		}

		/* Position in the deck */
		.card--deck-@{j} {
			top: (12% + @i * 13%);
		}

		/* Animation when the cards lower in the deck */
		.card--deck-lower-@{j} {
			animation: "cardLower@{j}" .25s forwards;
		}

		@keyframes "cardLower@{j}"{
			from { top: (12% + (@i - 1) * 13%); }
			to { top: (12% + @i * 13%); }
		}

		/* Animation to make the card leave the deck when it's played */
		.card--disappearance-deck-@{j} {
			animation: "cardDisappearance@{j}" .75s;
		}

		@keyframes "cardDisappearance@{j}" {
			from{ top: (12% + @i * 13%); }
			50% { transform: scaleX(1.3); }
			to{ top: -100vh; }
		}

		.LOOP-cardAppearance(@n, (@i + 1));
	}
	.LOOP-cardAppearance(5);


	/* Rows and columns of the card on the board (0...2) */
	.LOOP-card--rowcol(@n, @i: 0) when (@i < @n) {
		.card--row-@{i} {
			top: (10% + @i * 27%);
		}

		.card--col-@{i} {
			left: (27% + @i * 17%);
		}

		/* Animation to make the card appear on the board when it's played */
		.card--appearance-row-@{i} {
			z-index: 1;
			animation: "cardAppearanceOnBoard@{i}" .5s ease-out;
		}

		@keyframes "cardAppearanceOnBoard@{i}" {
			from { top: -100vh; }
			50% {transform: scaleX(1.3);}
			to { top: (10% + @i * 27%); }
		}

		.LOOP-card--rowcol(@n, (@i + 1));
	}
	.LOOP-card--rowcol(3);

	/* Shift slightly the card when selected */
	.card--selected-player-1 {
		left: 7%;
	}

	.card--selected-player-2 {
		right: 7%;
	}

	/* Filp the card */
	.card--back {
		background: url("../img/cards/blue/back.jpg") no-repeat;
		background-size: cover;
	}

	.LOOP-card--flip-i(@n, @i: 0, @perspectiveY: -1) when (@i < @n) {
		
		.LOOP-card--flip-j(@m, @j: 0, @perspectiveX: -1) when (@j < @m) {

			.card--front-Y-row-@{i}-col-@{j} {
				animation: "flipCardFrontY@{i}@{j}" .5s ease-out backwards;
			}

			.card--back-Y-row-@{i}-col-@{j} {
				animation: "flipCardBackY@{i}@{j}" .5s ease-out backwards;
			}
			
			.card--front-X-row-@{i}-col-@{j} {
				animation: "flipCardFrontX@{i}@{j}" .5s ease-out backwards;
			}
			
			.card--back-X-row-@{i}-col-@{j} {
				animation: "flipCardBackX@{i}@{j}" .5s ease-out backwards;
			}

			@keyframes "flipCardFrontY@{i}@{j}" {
				from { transform: rotateY(0deg); }
				50% { margin-left: (1.5% * @perspectiveX); margin-top: (2.5% * @perspectiveY); transform: rotateY(180deg) scale(1.2); }
				to { transform: rotateY(360deg); }
			}

			@keyframes "flipCardBackY@{i}@{j}" {
				from { transform: rotateY(180deg); }
				50% { 
					margin-left: (1.5% * @perspectiveX); 
					margin-top: (2.5% * @perspectiveY); 
					transform: scale(1.2);
					box-shadow: unit(@perspectiveX * -1, vmin) unit(@perspectiveY * -1, vmin) rgba(107, 105, 89, 0.65); 
				}
				to { transform: rotateY(540deg); }
			}

			@keyframes "flipCardFrontX@{i}@{j}" {
				from { transform: rotateX(0deg); }
				50% { margin-left: (1.5% * @perspectiveX); margin-top: (2.5% * @perspectiveY); transform: rotateX(180deg) scale(1.2); }
				to { transform: rotateX(360deg); }
			}

			@keyframes "flipCardBackX@{i}@{j}" {
				from { transform: rotateX(180deg); }
				50% { 
					margin-left: (1.5% * @perspectiveX); 
					margin-top: (2.5% * @perspectiveY); 
					transform: scale(1.2);
					box-shadow: unit(@perspectiveX * -1, vmin) unit(@perspectiveY * -1, vmin) rgba(107, 105, 89, 0.65); 
				}
				to { transform: rotateX(540deg); }
			}

			.LOOP-card--flip-j(@n, (@j + 1), (@perspectiveX + 1));
		}
		.LOOP-card--flip-j(3);

		.LOOP-card--flip-i(@n, (@i + 1), (@perspectiveY + 1));
	}
	.LOOP-card--flip-i(3);


/* Message */
.message {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	z-index: 50;
	background: linear-gradient(to right, #676962, #888786);
	box-shadow: -2px -2px 2px #54544D inset, 2px 2px 2px #9C908D inset;
    border: 1px solid #57514D;
    font-family: sans-serif;
    padding: 1.5% 1.5%;
    width: 30%;
	color: white;
	font-size: 3.5vmin;
}

@media(max-width: 165vh) {
	.message {
		font-size: 2.5vmin;
	}
}

	.message--bottom {
		top: 90%;
	}

	.message--text-center {
		text-align: center;
	}

	.message--hidden {
		display: none;
	}

	.message--info::before {
		content:'INFO.';
		font-size: 50%;
		position: absolute;
		top: 0;
		left: 0;
		padding-left: 1%;
		text-shadow: -1px 0 #575859, 0 1px #575859, 1px 0 #575859, 0 -1px #575859;
	}

	.message__choices {
		position: relative;
		padding-left: 15%;
	}